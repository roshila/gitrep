# Метод объекта — это функция, которая принадлежит объекту. По аналогии с полями получить доступ, то есть вызвать, такую функцию можно только через объект.

# Пишутся методы внутри тела класса. У каждого метода должен быть как минимум один аргумент и называть этот аргумент принято словом self.

# class Cat:
#     def ask_for_food(self):
#         print('Хозяин, я требую пищу')

# fil = Cat()
# fil.name = 'Филимон'
# fil.ask_for_food()
# Обратите внимание, что при вызове метода этот аргумент передавать не нужно. Python автоматически передает в метод экземпляр класса, у которого этот метод вызван. Немного переделаем нашу программу, чтобы коты говорили о себе в третьем лице
# class Cat:
#     def ask_for_food(self):
#         print('Хозяин, кот {} требует пищу'.format(self.name))

# fil = Cat()
# fil.name = 'Филимон'
# fil.ask_for_food()

# var = Cat()
# var.name = 'Варежка'
# var.ask_for_food()
# Обратите внимание, что метод у каждого из объектов вызван одинаково, однако в каждом из вызовов значения self отличаются. Да, если заменить self на любое другое название, программа по‑прежнему будет работать правильно
# class Cat:
#     def ask_for_food(instance):
#         print('Хозяин, кот {} требует пищу'.format(instance.name))

# Но делать этого не стоит. По традиции это все‑таки self и если какой‑нибудь программист увидит, что вместо self вы используете какое‑то другое слово, последствия могут быть плачевными.

# Для того, чтобы пройти этот урок, напишите программу, в которой будет написан хотя бы один класс с методом.

# # 1 
# class Cat:
#     def ask_for_food(self):
#         print('Кожанный, {} хочет кушать'.format(self.name))

# fil = Cat()
# fil.name = 'Пират'
# fil.age = 7
# fil.ask_for_food()

# var = Cat()
# var.name = 'Марыся'
# var.age = 14
# var.ask_for_food()
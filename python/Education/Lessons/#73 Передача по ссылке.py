# Как вы уже знаете, в Питоне есть изменяемые и неизменяемые типы данных. К изменяемым относятся, например, список и словарь, а к неизменяемым — строки, числа и кортежи.

# У изменяемых типов данных есть особенность. Переменные изменяемых типов данных передаются по ссылке. Это может показаться не понятным, но на самом деле все довольно просто. Для примера возьмем вот такой код
# a = {"key_1": 1, "key_2": 2}
# b = a
# b["key_3"] = 3
# print(a)
# print(b)
# Результат его выполнения может показаться странным: обе переменные совершенно одинаковы. Можно проверить это, используя встроенную функцию id, которая предназначена для получения идентификатора переменной
# a = {"key_1": 1, "key_2": 2}
# b = a
# b["key_3"] = 3
# print(id(a))
# print(id(b))

# Эту особенность изменяемых данных нужно помнить, чтобы избежать неприятных сюрпризов при написании программ.

# Например, мы задумали сделать программу, которая создает список словарей с отличающимися значениями ключа "key"
# dicts = []
# data = {}
# for i in range(3):
#     data['key'] = i
#     dicts.append(data)
# print(dicts)

# Запустив эту программу, вы увидите, что словари внутри списка совершенно одинаковые. То есть, у нас в списке три ссылки на один и тот же словарь.

# Все изменится, если перенести создание словаря в цикл. Тогда на каждой итерации будет создаваться новый словарь и все элементы списка действительно будут разными

# dicts = []
# for i in range(3):
#     data = {}
#     data['key'] = i
#     dicts.append(data)
# print(dicts)
# Иногда может понадобится сделать копию существующего словаря или списка. Для списков можно использовать срез от начала и до конца списка
# a = [1, 2, 3]
# b = a[:]
# print(id(a), id(b))
# Также у списков и словарей есть метод copy, который вернет копию существующего словаря либо списка

# a = {'key': 1}
# b = a.copy()
# print(id(a), id(b))
# Наверняка вы уже столкнулись с тем, что в любой программе можно допустить ошибку. Из‑за ошибок программа может работать не так, как надо или не работать совсем.

# Можно, например, ошибочно начать название переменной с цифры, или забыть поставить двоеточие после условия — в общем, нарушить правила языка. Такие ошибки называют синтаксическими.

# Встречая строку с такой ошибкой, интерпретатор Питона не знает как эту строку понимать, поэтому даже не запустит программу и выведет сообщение об ошибке

# File "__main__", line 1
#     print("Привет, мир!)
#                    ^
# SyntaxError: EOL while scanning string literal

# Второй тип ошибок в Питоне — это ошибки во время исполнения. То есть, это ошибки, которые возникают уже после того, как интерпретатор распознал все строки, не нашел синтаксических ошибок и начал выполнение программы.

# Например, ошибка возникнет в программе, если пользователь введет вместо цифр текст «foo»

# a = input("Введите число")
# a = int(a)

# Traceback (most recent call last):
#   module __main__ line 2
#     a = int(a)
# ValueError: invalid literal for int() with base 10: 'foo'

# Если говорить в терминологии Питона, здесь возникло исключение ValueError. Все ошибки, кроме синтаксических, принято относить к исключениям. Исключений в Питоне много, полный список встроенных исключений можно посмотреть тут. Учить этот список наизусть разумеется не нужно, а о том, как обрабатывать возникающие исключения, вы узнаете в следующем уроке.
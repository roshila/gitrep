# Оператор in можно использовать не только со строками и списками. Со словарями этот оператор тоже сработает, только проверять он будет наличие ключей.

# Если ключ найден, возвращается True, если нет — False. То есть, если мы хотим знать, есть какой‑то ключ в словаре, нужно написать что‑то похожее
# my_dict = {"first": "Первый", "second": "Второй"}
# if "first" in my_dict:
#     print("Ключ first есть в словаре!")

# У программы из прошлого урока был недостаток. Если пользователь вводил несколько одинаковых названий, каждое из них переписывало предыдущее. Можете запустить программу из предыдущего урока, ввести три одинаковых названия с разными количествами и посмотреть, что программа выведет на экран.

# Чтобы пройти этот урок, улучшите программу из прошлого урока:

# количество товара после ввода преобразуйте в тип int. Проверять правильность ввода пользователя не нужно. Понадеемся, что он будет вводить только числа

# если пользователь вводит несколько одинаковых наименований товара, их количество должно суммироваться в одном ключе словаря
# # 1 
# catalog =  {}
# for i in range(3):
#     user_item = input("Item: ")
#     user_amount = int(input("Amount: "))
#     if user_item in catalog:
#         catalog[user_item] += user_amount
#     else:
#         catalog[user_item] = user_amount
# for el in catalog:
#     print(el, ":", catalog[el])

# # 2 
# catalog = {}
# for k in range(3):
#     key = input('Введите название ')
#     kolvo = int(input('Введите количество '))

#     if key in catalog:
#         catalog[key] = catalog[key] + kolvo
#     else:
#         catalog[key] = kolvo
# for i in catalog:
#     print(i, ':', catalog[i])
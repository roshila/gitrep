# Если запустить программу из предыдущего урока и попробовать ввести наименование товара, в котором содержится символ двоеточие, программа будет работать не совсем так, как нужно.

# Попробуйте запустить ее и ввести в качестве наименования одного из товаров строку с двоеточием, например, "Товар: первая часть". После этого откройте файл с данными и посмотрите, какие данные были записаны в файл. Одна из строк файла будет выглядеть примерно так


# Товар: первая часть:5

# При повторном запуске, программа не сможет правильно прочитать данные из этой строки. Все, разумеется, зависит от вашей реализации, но либо наименование прочитается не полностью, либо произойдет ошибка, так как программа попытается перевести текст "первая часть" в число.

# Конечно, можно использовать другой разделитель, например, запятую. Но если в названии товара вдруг появится запятая, история повторится снова.

# Чтобы решить эту проблему раз и навсегда, можно использовать формат CSV (от англ. Comma-Separated Values — значения, разделённые запятыми), предназначенный для хранения табличных данных.

# В этом формате каждая строка таблицы соответствует строке текста, которая содержит одно или несколько полей, разделенных запятыми, а проблема запятых, как части значений, решается с помощью кавычек. Например так мог бы выглядеть наш каталог, сохраненный в формате CSV

# "Товар, с запятой", 13
# Без запятой, 22

# А самое приятное в этом формате вот что: во‑первых, в Python есть специальный модуль для работы с этим форматом данных, который все преобразования, нужные для правильной записи и чтения, сделает автоматически; во‑вторых, многие программы, например Excel, могут импортировать и экспортировать данные в формате CSV.
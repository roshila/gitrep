# Для того чтобы показать, что все рассказанное в этом уроке может встретиться в реальных программах, примеры будут взяты из серверной части нашей платформы. Разумеется, много кода в них будет убрано, чтобы показать только саму суть.

# Все подписки, которые можно купить, описаны классами. Часть методов этих классов отвечает за отображение информации пользователю, а часть служит для взаимодействия с платежными системами. Так вот, одна из таких подписок — это подписка на месяц. Если очень сильно все упростить и убрать все лишнее, то получится класс с методом, который возвращает цену

# class TariffOneMonth:
#     # На самом деле, тут у нас еще много всякого кода 
#     # для отображения в списках, работы 
#     # с платежными системами, валютой и так далее


#     def get_price(self):
#         return 10

# Бывает, что мы устраиваем распродажи и на этот случай у нас есть отдельный класс, который наследуется от TariffOneMonth. В нем мы переопределяем только метод get_price. То есть, получаем всю функциональность, только с другой ценой. Вот самый первый вариант кода для этого класса

# class TariffOneMonthDiscounted(TariffOneMonth):

#     # Цена с 50% скидкой
#     def get_price(self):
#         return 5
    

# Выглядит неплохо. Однако, есть один существенный недостаток. Стоимость подписки может измениться и цену придется менять в двух местах. И это только для одной из подписок. Плюс еще есть цены в разных валютах. Изменение цен — дело нечастое. Поэтому, с большой долей вероятности, кто‑нибудь обязательно забудет какую‑то из цен изменить.

# Представьте, цена подписки на месяц уменьшится в два раза, а цифру в подписке со скидкой никто не поменяет. В итоге получится две одинаковые цены и никаких реальных скидок. Вряд ли кого‑то это обрадует.

# В общем, хотелось бы получить цену от родительского класса и вычислять скидку от нее, чтобы описанного выше казуса не произошло. Для этого можно использовать функцию super, а итоговый вариант будет выглядеть так


# class TariffOneMonthDiscounted(TariffOneMonth):

#     # Цена с 50% скидкой
#     def get_price(self):
#         price = super().get_price()
#         return int(price / 2)  

# Обязательно запустите этот код, попробуйте изменить цену в TariffOneMonth и посмотрите, как это работает
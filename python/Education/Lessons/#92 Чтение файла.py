# Для того, чтобы потренироваться в работе на практике, создайте текстовый файл. Это можно сделать, нажав на кнопку Назовите файл example.txt и наполните его любым текстом. Можно просто написать несколько слов, а можно скопировать в файл любой текст, например

# Век живи, век учись
# Без терпенья нет уменья
# Без труда не вытащить и рыбки из пруда
# Обратите внимание, что для файлов с расширением .txt кнопка запуска неактивна. Разумеется, в установленном на компьютер интерпретаторе Python таких ограничений нет и запускать как программы можно абсолютно любые файлы с любыми именами и расширениями. Но все же стоит придерживаться общепринятых правил.

# Что ж, если файл example.txt создан и наполнен текстом, попробуем открыть его и прочитать содержимое с помощью Python.

# Для начала нужно открыть файл. Для этого нужно использовать встроенную функцию open, первый аргумент которой — путь к файлу. Если и файл и программа находятся в одном каталоге, достаточно передать имя файла:

# f = open('example.txt')

# Функция open возвращает объект файла, с помощью методов которого можно прочитать содержимое файла:

# f = open('example.txt')
# content = f.read()
# print(content)

# Если имя файла или путь будет неверный, функция open вызовет исключение FileNotFoundError, попробуйте

# f = open('example_1.txt')

# или

# f = open('/path/to/example.txt')

# Если файла не существует, программа завершится с ошибкой

# Traceback (most recent call last):
#   module file_works.py line 1
# FileNotFoundError: [Errno 2] No such file or directory: '/path/to/example.txt'

# Исключение FileNotFoundError, как и любое другое исключение, можно «поймать» с помощью конструкции try...except. Это наверняка пригодится вам в будущем.

# Чтобы пройти этот урок, напишите программу, которая читает любой текстовый файл и выводит его содержимое на экран.


# # 1
# f = open('example.txt')
# s = f.read()

# print(s)

# # 2 
# with open('example.txt')as f:
#     content = f.read()
# print(content)

# # 3
# print(open('text.txt').read())
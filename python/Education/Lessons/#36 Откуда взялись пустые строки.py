# При выполнении задачи из прошлого урока мог возникнуть вопрос, почему такая программа не будет засчитана?
# string = input("Введите что-нибудь")
# words = string.split(" ")
# print(len(words))
# Все кажется правильным и логичным. Однако, если ввести предложение, слова в котором разделены не одним, а несколькими пробелами, программа неправильно подсчитает количество слов.

# Попробуйте распечатать переменную words
# string = input("Введите что-нибудь")
# words = string.split(" ")
# print(words)
# и посмотрите, что будет выведено на экран, если ввести предложение, в котором между словами будет несколько пробелов.
# Тестовое  предложение
# Между словами «Тестовое» и «предложение» два пробела, вместо одного. Результат работы программы будет следующим
# ['Тестовое', '', 'предложение']
# Как видите, в списке не два элемента, а три. Почему так получилось и откуда взялась пустая строка в списке? Лучший способ понять что к чему, — это написать собственный алгоритм разбиения предложения на слова.
# string = input("Введите что-нибудь")
# words = []
# i = 0
# word = ''
# while i < len(string):
#     if string[i] == ' ':
#         # если текущий символ в строке
#         # пробел (разделитель), то нужно 
#         # добавить все, что
#         # накопилось в переменной word в список
#         # и очистить переменную
#         words.append(word)
#         word = ''
#     else:
#         # если текущий символ не разделитель
#         # то добавим его в переменную
#         # с текущим словом
#         word += string[i]
#     i += 1
# # все, то накопилось в текущем слове
# # нужно добавить в список слов
# words.append(word)
# print(words)
# Запустите эту программу и убедитесь, что она работает так же как и вызов метода split с пробелом в качестве аргумента.

# Если же вызвать split без аргумента, то будет использован специальный алгоритм, который будет считать разделителем последовательность пробельных символов. То есть, пустых строк из‑за нескольких пробелов подряд в итоговом списке не будет.

# В качестве упражнения попробуйте самостоятельно реализовать такой алгоритм, взяв код для разбиения по символу пробела за основу. Это необязательно, но если у вас получится, то вы обязательно оцените, насколько Python упрощает программистскую жизнь.

# Получившийся код можно выложить в вопросах и обсудить его с коллегами по учебе.

# в питоне существует ряд специальных символов для упрощения написания кода 
# (1) Ковычки
# например чтобы в значении переменной указать двойную" или одинарную' ковычки можно использовать несколько способов:
# (1.1) 
a = 'Строка с двойной" ковычкой' # В этом способе мне нужно указать в строке ковычку и я указываю другой тип ковычки
print(a) # такой код выполнится без проблем, но что если мне нужно две ковычки?
#
a = 'Строка с двойной" ковычкой и ещё одной двойной" ковычкой' # да, такой код определённо будет работать, даже без ошибок
print(a)
#
a = "Строка с одинарной' ковычкой и ещё одной одинарной' ковычкой"# никто не мог такого ожидать, но с одинарной ковычкой это тоже работает
print(a) # такой код не вызывает ошибок
# но что если нужны два типа ковычек в одной строчке? -> используй
# (1.2)
a = "Строка с \" двойной ковычкой и \' одинарной ковычкой" # специальный символ \ позволяет отобразить ковычки в строке
print(a) # использование обратного слэша для отображения ковычек называется экранирование
#
# (2) Обратный слэш
# В том случае если на странице нужно отобразить обратный слеш то нужно использовать специальный символ \\
a = "Строка с двойной \" ковычкой, одинарной \', ковычкой и обратным слешем \\"
print(a)
#
# (3) Перенос строки
# Перенос строки можно осуществить с помощью специального символа \n
a = "Ещё одна строка с \nПереносом строки, двойной \" ковычкой, одинарной \' ковычкой и \\ обратным слешем"
print(a)
a = "Ещё одна строка с \n Переносом строки, двойной \" ковычкой, одинарной \' ковычкой и \\ обратным слешем"
print(a) # Если после \n будет стоять пробел то перенос строки выполнится с одним пробелом, если межде \n и последующим текстом не будет пробела то перенос сроки выполнится от левой границы строки
a = "Ещё одна строка с\n Переносом строки, двойной \" ковычкой, одинарной \' ковычкой и \\ обратным слешем"
print(a) # если перед \n и текстом до \n не будет стоять пробела то это никак не отобразится на конечном результате
#
# (3.1)
a = """Первая строка 
Вторая строка""" # Перенос строки также можно выполнить с помощью специального символа """.""", однако стоит быть внимательным ведь
print(a) # при использовании этого способа в первой строке нельзя будет написать комментарий
#
a = '''Перваая строока
Вторая строка''' #С одинарными ковычками тоже работает
print(a)
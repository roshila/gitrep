#-------------------------------------------------------------------------------------------------------#
#Если что комбинации кнопок Ctrl + K Затем Ctrl + c оборачивают сроку в комментарий
#А комбинация Ctrl + K  Затем Ctrl + U убирает коментарии у выделенных строк 
# -------------------------------------------------------------------------------------------------------#
# (1)  Numbers(Числа)/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# Числовой формат данных задаётся значению переменной через функцию int()
# 
# Пример .1.
a = 10 + 1 # 10 + 1 это числовое значение переменной a. В данном случае оно будет распознано автоматически и выполнится числовое выражение 10 + 1
b = a - 6 # поскольку результатом выполнения числового выражения в значении переменной a= является число то программа опять автоматически опознает числовой формат
# в значении переменной, (10 + 1) - 6 оба значения числа, оба распознаны как числовой формат
print(a , b) # Результатом выполнения будет вывод на экран значения переменной a и потом значения переменной b (11 5)
#
# Пример .2.
# Однако программа распознает числовой формат сама только если работает исключительно с числами, иногда это не будет работать
#////a = '123' # Значение переменной, указанное в ковычках '' будет распознано программой как строка и дальнейшее выполнение кода станет невозможным
#////c = a - 23 # В этой строке возникает ошибка "Возникло исключение: TypeError" , потому что ковычки явно дают программе понять что она работает со строкой,
# а 23 вполне себе число и мы пытаемся задать в значение переменной c= числовое выражение в котором из строки вычетаем число
#////print(c)
#
# Пример .3.
a = '123' # Чтобы в дальнейшем программа смогла выполнять числовые выражения со значением переменной a= , которое явно задано как строка с помощью ковычек
b = int(a)# Нам нужно явно задать числовое выражение для переменной a=, например задав новую переменную, которая присвоит себе числовое представление значения a=
# значение переменной b равно результат выполнения функции int(a), которая преобразует значение переменной a= в числовой формат и возращает в переменную b= числовую запись значения переменной a=
c = b - 23# В этом случае код спокойно выполняется и ошибок не возникает, переменная b= имеет числовой формат данных
print(c)  # Результатом выполнения будет 100 
#
# Пример .4.
# Функция int() не  может преобразовать текст в число
#////a = 'Какой-то текст' # В отличие от примере .3. где в строчном формате задано число, тут в строчном формате задан текст
#////b = int(a) # Преобразование сработает только если в переменной a= в строчной формате будет задано число, если будет задан текст то возникает
# ошибка "Возникло исключение: ValueError"
#////c = a - 23 # Дальнейший код не выполняется 
#////print(c)
#
# Пример .5.
a = input('Что-то кроме числа') # В первом уроке об этом писал, но напишу ещё раз, функция input() по умолчанию преобразовывает всё в строку, но
# дальнейшее преобразование значения, полученного с помощью этой функции в число для дальнейших математических операций возможно только если изначально задано число
# неявное число можно явно обозначить как числовой формат, строку - нельзя. Попробуй ввести в переменную a сначала число, а потом какой-то текст
b = int(a) # В случае если было введено число то оно без проблем преобразуется в числовой формат и код выполняется далее, если же введен текст то
# Возникает ошибка "Возникло исключение: ValueError"
print(b)
#
# Пример .6.
# Значение, полученное с помощью пользовательского ввода можно всегда явно помечать как числовой формат
a = int(input('Если ввести не число - смерть')) # в таком случае любое значение, в том числе и текст будут преобразовываться в число и ломать всю программу
print(a) # если было введено число то всё ок, числа к числам, строки к строкам
# 
# Пример .7. 
# Функция int(), которая преобразовывает строку в число не будет работать с дробью:
#////a = '5.5' # Дробь - это отдельный тип данных, который задаётся другой функцией, а функция int() преобразует данные в ЦЕЛОЕ ЧИСЛО
#////b = int(a)# ошибка "Возникло исключение: ValueError"
#////print(b)








#
# (2)  Strings(Строки)///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# Строчный формат данных задаётся значению переменной через функцию str()
a = 5 + 2 #Переменная a будет по умолчанию иметь числовой формат данных
b = a - 2 #Переменная b также будет по умолчанию иметь числовой формат данных
#print('Результат=' + b) #Аргумент функции print() 'Результат' имеет строчный тип данных, а переменная b числовой, возникает ошибка, поскольку необходимо явно указать для b строчный тип данных чтобы скелить значение b с аргументом функции.
print('Результат=' + str(b)) #Функция str() используется для того чтобы явно задать строчный формат данных для переменной или значения переменной
#
# Значению, полученному с помощью ввода данных input() можно не задавать строчный формат поскольку input() автоматически определяет значение как строку
a = input('Введите число') #Не имеет значения что именно я введу в input, оно сразу будет преобразовано в строку и передано в функцию print()
b = input('Введите не число') #Функция print() же в свою очередь без ошибок перечислит строки через пробел
print(a,b) #Значения переменных a и b переданные с помощь функций input() - строка, так что print() выполняется без ошибок 
#
a = input('Введите только число') 
b = input('Введите только сроку')
print(a + b)#Даже если в одной из переменных будет число в строке, то это число всё равно будет преобразовано в строку функцией input() и в конечном итоге склеено функцией print()
#
a = int(input('Теперь можно ввести только число')) # с помощью функции int() явно задаём числовое значение функции input()
b = input('Введите только текст') 
#print(a + b) # В таком случае возникнет ошибка, потому что в 44 строке мы явно задали числовой формат для функции input(), склеить число со строкой не получится
print(str(a) + b) # чтобы добиться успеха в жизни мы можем задать в функции print строчное значение для переменной a 
#
#Попробуем с оператором сложения
a = int(input('Ввод только числа'))
a = input('Только строка')
#c = a + b #Кто бы мог подумать, если задать переменную, значением которой будет сумма числа и строки то возникнет ошибка
c = str(a) + b # такой код вполне может существовать и по сути он будет означать следующее: присвоить переменной с значение равное строковому значению переменной а , склеенному с переменной b
print(c) #Результатом c будет склееные значения переменных
# 
a = 1 + 3 # задаем переменную а со значением, равным результату арифметической операции
result = str(a) # задаем переменную result со значением, равным строковому представлению переменной а 
print('Результат' + result)# Если мы выводим результат арифметической операции из переменной а на экран с помощью функции print, то нужно задать текстовый формат результату, поскольку функция print работает только с текстовым форматом
#
#a = 1 + 3 
#print('Результат' + a) #Собственно говоря , да, ошибка.
#
# (3) Дробный тип данных //////////////////////////////////////////////////////////////////////////////////////////////////////
# Функция float() преобразует аргумент функции в дробный тип данных
a = '5.5'
b = float(a) #функция float преобразует строку в дробное число 
c = b + 2
print(b,c)
# если ты совсем отчаялся то можешь попробовать преобразовать текст функцией float
#a = 'some text'
#b = float(a) #Кто бы мог подумать, ошибка, смирись, текст никогда не будет преобразован в число 
#print(b)
#дробная или целая часть числа в аргументе функции float может отсутствовать, это не помешает ей сработать верно
print(float('1.')) #если число после точки не стоит то
print(float('.1')) #программа распознает его как 0
print(float('1')) #или если введено целое число то оно будет преобразовано в дробное, с нулём после точки 
#
# (4) Булевой(Логический тип данных True/False)
#
#Lists(Списки)
#Dictionaries(Словари)
#Tuples(Кортежи)
#Sets(Множества)
#-------------------------------------------------------------------------------------------------------#
#Если что комбинации кнопок Ctrl + K Затем Ctrl + c оборачивают сроку в комментарий
#А комбинация Ctrl + K  Затем Ctrl + U убирает коментарии у выделенных строк 
# -------------------------------------------------------------------------------------------------------#
# (1)  Numbers(Числа)////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# Числовой формат данных задаётся значению переменной через функцию int()
# 
# Пример .1.
a = 10 + 1 # 10 + 1 это числовое значение переменной a. В данном случае оно будет распознано автоматически и выполнится числовое выражение 10 + 1
b = a - 6 # поскольку результатом выполнения числового выражения в значении переменной a= является число то программа опять автоматически опознает числовой формат
# в значении переменной, (10 + 1) - 6 оба значения числа, оба распознаны как числовой формат
print(a , b) # Результатом выполнения будет вывод на экран значения переменной a и потом значения переменной b (11 5)
#
# Пример .2.
# Однако программа распознает числовой формат сама только если работает исключительно с числами, иногда это не будет работать
#////a = '123' # Значение переменной, указанное в ковычках '' будет распознано программой как строка и дальнейшее выполнение кода станет невозможным
#////c = a - 23 # В этой строке возникает ошибка "Возникло исключение: TypeError" , потому что ковычки явно дают программе понять что она работает со строкой,
# а 23 вполне себе число и мы пытаемся задать в значение переменной c= числовое выражение в котором из строки вычетаем число
#////print(c)
#
# Пример .3.
a = '123' # Чтобы в дальнейшем программа смогла выполнять числовые выражения со значением переменной a= , которое явно задано как строка с помощью ковычек
b = int(a)# Нам нужно явно задать числовое выражение для переменной a=, например задав новую переменную, которая присвоит себе числовое представление значения a=
# значение переменной b равно результат выполнения функции int(a), которая преобразует значение переменной a= в числовой формат и возращает в переменную b= числовую запись значения переменной a=
c = b - 23# В этом случае код спокойно выполняется и ошибок не возникает, переменная b= имеет числовой формат данных
print(c)  # Результатом выполнения будет 100 
#
# Пример .4.
# Функция int() не  может преобразовать текст в число
#////a = 'Какой-то текст' # В отличие от примере .3. где в строчном формате задано число, тут в строчном формате задан текст
#////b = int(a) # Преобразование сработает только если в переменной a= в строчной формате будет задано число, если будет задан текст то возникает
# ошибка "Возникло исключение: ValueError"
#////c = a - 23 # Дальнейший код не выполняется 
#////print(c)
#
# Пример .5.
a = input('Что-то кроме числа') # В первом уроке об этом писал, но напишу ещё раз, функция input() по умолчанию преобразовывает всё в строку, но
# дальнейшее преобразование значения, полученного с помощью этой функции в число для дальнейших математических операций возможно только если изначально задано число
# неявное число можно явно обозначить как числовой формат, строку - нельзя. Попробуй ввести в переменную a сначала число, а потом какой-то текст
b = int(a) # В случае если было введено число то оно без проблем преобразуется в числовой формат и код выполняется далее, если же введен текст то
# Возникает ошибка "Возникло исключение: ValueError"
print(b)
#
# Пример .6.
# Значение, полученное с помощью пользовательского ввода можно всегда явно помечать как числовой формат
a = int(input('Если ввести не число - смерть')) # в таком случае любое значение, в том числе и текст будут преобразовываться в число и ломать всю программу
print(a) # если было введено число то всё ок, числа к числам, строки к строкам
# 
# Пример .7. 
# Функция int(), которая преобразовывает строку в число не будет работать с дробью:
#////a = '5.5' # Дробь - это отдельный тип данных, который задаётся другой функцией, а функция int() преобразует данные в ЦЕЛОЕ ЧИСЛО
#////b = int(a)# ошибка "Возникло исключение: ValueError"
#////print(b)
#
# (2)  Strings(Строки)///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#
# Строчный формат задаётся для данных с помощью функции str()
#
# Пример .1.:
#////a = 5 + 5 # По умолчанию переменная a= будет иметь числовой формат данных
#////b = a - 3 # Переменная b= также будет по умолчанию иметь числовой формат данных
#////print('Результат=' + b) # В функции print() программа попытается выполнить склеивание двух значений 'Результат=' и значения переменной b.
# 'Результат=' является строкой, переменная b является целым числом, результатом выполнения будет ошибка
#
# Пример .2.:
a = 5 + 5 # Условия аналогичны Примеру .1.
b = a - 3 # Условия аналогичны Примеру .1.
print('Результат=' + str(b)) # мы можем поместить значение переменной b в функцию str() внутри функции print() и таким образом два значения, 
# которые имеют строчный формат данных будут склеены и на выходе будет "Результат=7"
#
# Пример .3.:
a = input('Введите число')# не имеет значения что будет введено пользователем, текст или число, оно автоматически станет строкой.
b = input('Введите текст')# для функции input() не нужно указывать строчный формат данных, поскольку значения, полученные из этой функции будут автоматически строчными
print(a , b) # Функция print() сработает без ошибок и перечислит строчные значения переменных.
#
# Пример .4.:
a = input('Ввод числа')
b = input('Ввод строчки')
print(a +  b) # если задать аргументом функции математическую операцию a + b то даже если ранее были введены числа то они будут преобразованы в строки и склеены
#
# Пример .5.:
#////a = int(input('Только число'))# как было показано ранее - можно явно задавать числовое значение для данных, полученных с помощью функции input()
#////b = input('Только текст') # в переменной b значение будет иметь строчный формат, тк явно не задан иной формат
#////print(a + b) # Возникает ошибка , сложить или склеить целое число и строку нельзя
# 
# Пример .6.:
a = int(input('Только число')) # Чтобы условие из примера .5. заработало без ошибок нужно далее задать строчный формат для данных из этой переменной
b = input('Строчный формат')
sum = a + 5 #В этом примере я ввёл дополнительную переменную чтобы оправдать изначально заданный числовой формат для input()
c = str(sum) + b # задаём с помощью функции str() строчный формат для переменной
print(c) # Выполнение кода пройдёт без ошибок, функция склеет строчной значение переменной sum со значением переменной b
#
#
# (3) Дробный тип данных ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#
# Функция float() преобразует аргумент функции в дробный тип данных
#
# Пример .1.:
a = '5.5' # Задаём строку с дробным значением
b = float(a) # С помощью функции float() задаём значению переменной b= дробное значение переменной a
print(b + 0.5) # Если print() работает только с дробями то он не будет ругаться на этот код
#
# Пример .2.:
a = '5.5'
b = float(a) + 5 # Возможны арифместические операции как с целым числом так и с дробным
print(b)
#
# Пример .3.:
a = '5.6' # Задаём строку со значением 5.6
a = float(a)# Меняем строчное значение переменной a= на дробное
b = a + 0.4 # Задаём переменную b= со значением равным математической операции сложения переменной a= + 0.4 (6)
c = b - a   # Задаём переменную c= со значением равным 6(b=) - 5.6 (a=)
print(c)    # Функция print() выводит на экран 0.4 , всё работает без ошибок
#
# Пример .4.:
#////a = 'Текст' 
#////a = float(a) # Функция float() по аналогии с int() не может преобразовать текст в дробь, возникает ошибка
#////print(a)  
#
# Пример .5.:
print(float('10.')) # Дробная 
print(float('.10')) # Или целая часть в аргументе функции float() может отсутствовать, это не помешает функции преобразовать данные в дробь
print(float('10'))  # Если после точки ничего не стоит то программа поставит туда ноль 0 , также она сделает это если будет введено целое число без точки
#
#
# (4) Булевой(Логический тип данных True/False)////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#





# целые числа (int);
# вещественные числа (float);
# комплексные числа (complex).
#Lists(Списки)
#Dictionaries(Словари)
#Tuples(Кортежи)
#Sets(Множества)
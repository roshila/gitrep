# В Питоне функции — это такие же данные, как число, список или строка. Отличие функций в том, что они поддерживают возможность вызова, а, например, строки — нет.

# Вся эта «похожесть» функции на другие типы данных означает, что функцию можно присвоить переменной и использовать ее также, как исходную функцию:
# def print_hello():
#     print('Привет!')

# new_function = print_hello

# print_hello()
# new_function()

# Теперь в этой программе у нас две совершенно одинаковые функции с разными именами.

# Также обратите внимание, что при присваивании мы не вызываем функцию print_hello. То есть мы пишем print_hello, а не print_hello(). Поэтому и переменной присваивается именно сама функция, а не результат ее вызова. Если мы немного изменим программу,
# def print_hello():
#     print('Привет!')

# new_function = print_hello()

# print_hello()
# new_function()


# она завершится с ошибкой
# TypeError: 'NoneType' object is not callable
# Все потому, что мы вызвали функцию print_hello при присваивании и ее результат был присвоен переменной new_function. А, как вы помните из прошлых уроков, функция без return возвращает None
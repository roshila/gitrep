# Чтобы начать использовать формат csv в своих программах, нужно импортировать модуль для работы с ним


# import csv
# Этот модуль входит в стандартную библиотеку и его не нужно устанавливать каким‑то особенным способом.

# Для того, чтобы попробовать чтение в формате csv, нам понадобится тестовый файл. Назовите его test.csv и запишите в него вот такое содержимое


# Иван Иванов,Минск,"Партизанский проспект, 1-8"
# Сидор Сидоров,Москва,"Улица Танкистов, 2-12"
# Петр Петров,Киев,"Бетонный проезд, 10-1"

# Обратите внимание, пробелов после запятой, быть не должно.

# Код для чтения такого файла будет выглядеть так

# import csv

# with open('test.csv') as f:
#     rows = csv.reader(f)
#     for row in rows:
#         print(row)

# Попробуйте запустить ее и программа выведет на экран следующий текст

# ['Иван Иванов', 'Минск', 'Партизанский проспект, 1-8']
# ['Сидор Сидоров', 'Москва', 'Улица Танкистов, 2-12']
# ['Петр Петров', 'Киев', 'Бетонный проезд, 10-1']

# Самая важная строчка в программе — это строчка с получением итератора
# rows = csv.reader(f)

# После выполнения этой строки в переменную rows будет записан итератор, с помощью которого можно «пробежаться» циклом по файлу.

# В каждой итерации цикла при этом будет доступна соответствующая строка файла, уже разбитая по запятым и представляющая собой список. При этом, автоматически будут учтены все нюансы с запятыми внутри кавычек и самими кавычками.

# Так как каждая строка файла, полученная из итератора, является списком, к ней можно применять все способы работы со списками.

# В этой программе, например, используется распаковка


# import csv

# with open('test.csv') as f:
#     rows = csv.reader(f)
#     for name, city, address in rows:
#         print(name, city, address)

# Так мы можем получить каждый элемент строки файла в своей переменной.
# Вы наверняка помните, что в списках или, например, кортежах, можно получить доступ к любому элементу по индексу. Индекс списка или кортежа целочисленный, начинается с нуля и по сути — это номер элемента в коллекции. В словаре индексом может быть любой неизменяемый тип данных.

# Словарь обозначается с помощью фигурных скобок, а индексы, которые в словаре принято называть ключами, разделяются со значениями двоеточием. Элементы у словаря, как и у списка, разделены запятыми. Эта программа
# my_dict = {"first": "Первый", "second": "Второй", 3: "Третий"}
# print(my_dict["second"])
# print(my_dict[3])
# выведет на экран значения ключей "second" и 3
# Второй
# Третий
# Для чего может понадобится такой тип данных? Представьте список покупок, который вы сделали перед походом в магазин. Название покупки в словаре будет ключом, а количество — значением.
# purchases = {"Батон": 1, "Пирожок": 3, "Беляш": 10}
# Конечно, это может быть не только список покупок, смысл я думаю понятен.

# Получить значение несуществующего в словаре ключа нельзя, а если попытаться
# my_dict = {"first": "Первый", "second": "Второй", 3: "Третий"}
# print(my_dict["strange_key"])
# Питон выдаст ошибку
# KeyError: strange_key
# Для того чтобы код было удобнее читать, при создании словаря можно расположить его элементы на разных строках:
# my_dict = {
#     "first": "Первый", 
#     "second": "Второй", 
#     3: "Третий"
# }
# Python прочитает это как правильный словарь.
# Создать пустой словарь можно так
# my_empty_dict = {}
# Питон считает пустой словарь ложью. Это, как и в случае со списками, можно использовать в целях проверки. Словарь, в котором есть хотя бы один ключ будет для Питона истиной.
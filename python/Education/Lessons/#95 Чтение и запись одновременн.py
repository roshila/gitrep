# Если попробовать вызвать метод read у файла, открытого в режиме записи

# f = open('example_x.txt', 'w')
# f.write('Какая-то информация')
# content = f.read()
# print(content)
# f.close()
# возникнет ошибка


# Traceback (most recent call last):
#   module file_works.py line 2
# io.UnsupportedOperation: not readable
# Чтобы получить возможность читать и писать в файл, в режим открытия файла нужно добавить символ +

# f = open('example_x.txt', 'w+')
# f.write('Какая-то информация')
# content = f.read()
# print(content)
# f.close()

# Одну проблему мы решили, и программа запускается без ошибок. Но почему функция print на четвертой строке ничего не выводит на экран?

# Это происходит из‑за того, что указатель после записи передвигается на позицию за последним записанным символом. Попробуйте вывести текущую позицию указателя после записи с помощью метода tell, о котором было рассказано в одном из предыдущих уроков и посмотрите на результат.

# Для того, чтобы передвинуть указатель внутри файла на произвольную позицию, можно использовать метод seek. Этой функции можно передать два аргумента. Первый, обязательный, — это offset, то есть количество позиций, на которое нужно переместить указатель. Если этот аргумент положительный, указатель будет перемещен вправо, если отрицательный — влево.

# Второй, необязательный аргумент — это from_what. С помощью него можно указать, откуда следует переместить указатель: 0 — от начала файла, 1 — от текущей позиции и 2 — от конца файла. По‑умолчанию этот аргумент принимает значение 0


# f = open('example_x.txt', 'w+')
# f.write('Какая-то информация')
# f.seek(-10, 1)
# content = f.read()
# print(content)
# f.close()

# Такой код, например, выведет на экран последние 10 символов из только что записанной строки в файл. То есть слово «информация».
# В уроках этого раздела с помощью цикла for мы по шагам перебирали элементы списков. Также была программа с использованием функции range. Эта функция возвращает последовательность, похожую на список. Так вот, и список и последовательность, возвращенная range — итерируемые объекты, то есть объекты, по которым можно «пробежаться» циклом. Строка и кортеж — также итерируемые объекты.

# Результат функции enumerate — также итерируемый объект.
# Но этот объект немного отличается от всех объектов, приведенных выше.

# Попробуйте запустить вот такую программу

# a = range(10)
# b = [1,2,3]
# c = enumerate(b)

# for i in a:
#     print(i)

# for i in b:
#     print(i)

# for i in c:
#     print(i)

# print(a[0])
# print(b[0])
# print(c[0])
# Ошибка произойдет в последней строке программы, при попытке получить элемент последовательности c. То есть, с одной стороны элементы есть. Мы можем «пробежаться» по ним циклом. А с другой стороны их нет, по крайней мере получить доступ к одному из элементов мы не можем.

# Такие объекты называются итераторами. Каждую итерацию цикла к такому объекту идет обращение с «просьбой» отдать следующее значение. Как раз в момент этого обращения нужное значение создается и возвращается. Для enumerate, например, каждое такое обращение создает кортеж из двух элементов — номера элемента следующего и самого следующего элемента.
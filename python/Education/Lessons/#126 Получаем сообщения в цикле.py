# Сейчас мы вынуждены запускать программу каждый раз, когда посылаем сообщение боту. Это, однако, не совсем правильно. Теоретически сообщение боту может прийти не только от нас и в любое время. Возможно, вы уже догадались, что если запрашивать обновления в бесконечном цикле, наша программа сможет обработать все, что присылается боту.

# Попробуйте запустить такую программу, подставив адрес обновлений своего бота

# import requests

# while True:
#     result = requests.get('Тут должен быть адрес для вашего бота')
#     data = result.json()
#     for update in data['result']:
#         print(update['message']['text'])
        
# Напишите несколько сообщений своему боту. Все сообщения, который вы напишите, программы будет получать каждую итерацию цикла. Это не очень‑то хорошо, мы ведь не хотим получать одни и те же сообщения по несколько раз.

# Для того, чтобы решить эту проблему, в Telegram Bot API предусмотрен дополнительный параметр для указания последнего обработанного сообщения и называется он offset. Параметры можно передать с помощью необязательного аргумента функции get. Этот параметр называется params, а ниже приведен код, который уже не будет выводить сообщения повторно



# import requests

# last_update_id = 0
# while True:
#     result = requests.get(
#         'Тут должен быть адрес для вашего бота',
#         params={'offset': last_update_id + 1})
#     data = result.json()
#     for update in data['result']:
#         print(update['message']['text'])
#         last_update_id = update['update_id']

# Параметр offset и ключ обновления 'update_id' мы взяли из документации. Еще раз повторюсь — документация в работе с различными API — крайне важная штука и читать ее необходимо.
# https://tlgrm.ru/docs/bots/api#getupdates